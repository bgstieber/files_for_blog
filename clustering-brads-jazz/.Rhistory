county_data
county_data %>%
select(DATE, NAME, POS_NEW, TEST_NEW, pos_test_rate, pos_test_rate_roll_mean_7)
county_data %>%
filter(DATE > "2020-06-07") %>%
select(DATE, NAME, POS_NEW, TEST_NEW, pos_test_rate, pos_test_rate_roll_mean_7)
county_data %>%
filter(DATE > "2020-06-07") %>%
select(DATE, NAME, POS_NEW, TEST_NEW, pos_test_rate, pos_test_rate_roll_mean_7)  %>% View()
county_data_model <- county_data %>%
filter(DATE > "2020-06-07") %>%
group_by(NAME) %>%
mutate(min_tests = min(TEST_NEW)) %>%
ungroup() %>%
filter(min_tests >= 10) %>%
group_by(NAME) %>%
nest() %>%
mutate(model = map(data, pos_model))
county_data_model
county_data_model %>%
mutate(model_tidy = map(model, broom::tidy))
county_data_model %>%
mutate(model_tidy = map(model, broom::tidy)) %>%
unnest(model_tidy)
county_data_model %>%
mutate(model_tidy = map(model, broom::tidy)) %>%
unnest(model_tidy) %>%
filter(term != "(Intercept)") %>%
ggplot(aes(reorder(NAME, estimate), estimate))+geom_col()
county_data_model %>%
mutate(model_tidy = map(model, broom::tidy)) %>%
unnest(model_tidy) %>%
filter(term != "(Intercept)") %>%
ggplot(aes(reorder(NAME, estimate), estimate))+geom_col()+
coord_flip()
county_data_model <- county_data %>%
filter(DATE > "2020-06-07") %>%
arrange(DATE) %>%
group_by(NAME) %>%
mutate(min_tests = min(TEST_NEW),
days_since = 1:n()) %>%
ungroup() %>%
filter(min_tests >= 10) %>%
group_by(NAME) %>%
nest() %>%
mutate(model = map(data, pos_model))
county_data_model %>%
mutate(model_tidy = map(model, broom::tidy)) %>%
unnest(model_tidy) %>%
filter(term != "(Intercept)") %>%
top_n(estimate, 10)
county_data_model %>%
mutate(model_tidy = map(model, broom::tidy)) %>%
unnest(model_tidy) %>%
filter(term != "(Intercept)") %>%
top_n(10, estimate)
county_data_model %>%
mutate(model_tidy = map(model, broom::tidy)) %>%
unnest(model_tidy) %>%
filter(term != "(Intercept)") %>%
ungroup() %>%
top_n(10, estimate)
county_data_model %>%
mutate(model_tidy = map(model, broom::tidy)) %>%
unnest(model_tidy) %>%
filter(term != "(Intercept)") %>%
ungroup() %>%
top_n(10, estimate) -> top10_worst
county_data %>%
filter(DATE > "2020-06-07") %>%
filter(NAME %in% top10_worst$NAME) %>%
ggplot(aes(DATE, pos_test_rate_roll_mean_7))+
geom_line(aes(colour = NAME))
top_12_worst.data %>%
mutate(NAME = reorder(NAME, estimate, max)) %>%
mutate(NAME_2 = NAME) %>%
ggplot(aes(DATE, pos_test_rate_roll_mean_7))+
geom_line(aes(colour = NAME))+
facet_wrap(~NAME)
county_data_model %>%
mutate(model_tidy = map(model, broom::tidy)) %>%
unnest(model_tidy) %>%
filter(term != "(Intercept)") %>%
ungroup() %>%
top_n(12, estimate) -> top12_worst
top_12_worst.data <- county_data %>%
filter(DATE > "2020-06-07") %>%
inner_join(select(top12_worst, NAME, estimate))
top_12_worst.data %>%
mutate(NAME = reorder(NAME, estimate, max)) %>%
mutate(NAME_2 = NAME) %>%
ggplot(aes(DATE, pos_test_rate_roll_mean_7))+
geom_line(aes(colour = NAME))+
facet_wrap(~NAME)
top_12_worst.data %>%
mutate(NAME = reorder(NAME, -estimate)) %>%
mutate(NAME_2 = NAME) %>%
ggplot(aes(DATE, pos_test_rate_roll_mean_7))+
geom_line(aes(colour = NAME))+
facet_wrap(~NAME)
top_12_worst.data <- county_data %>%
filter(DATE > "2020-06-07") %>%
inner_join(select(top12_worst, NAME, estimate)) %>%
mutate(NAME = reorder(NAME, -estimate)) %>%
mutate(NAME_2 = NAME)
top_12_worst.data %>%
ggplot(aes(DATE, pos_test_rate_roll_mean_7))+
geom_line(aes(colour = NAME))+
facet_wrap(~NAME)
top_12_worst.data %>%
ggplot(aes(DATE, pos_test_rate_roll_mean_7))+
geom_line(select(top_12_worst.data, -NAME), aes(group = NAME_2))+
geom_line(aes(colour = NAME))+
facet_wrap(~NAME)
top_12_worst.data %>%
ggplot(aes(DATE, pos_test_rate_roll_mean_7))+
geom_line(data = select(top_12_worst.data, -NAME), aes(group = NAME_2))+
geom_line(aes(colour = NAME))+
facet_wrap(~NAME)
top_12_worst.data %>%
ggplot(aes(DATE, pos_test_rate_roll_mean_7))+
geom_line(data = select(top_12_worst.data, -NAME), aes(group = NAME_2),
colour = "grey", alpha = 0.4)+
geom_line(aes(colour = NAME))+
facet_wrap(~NAME)
theme_set(theme_bw())
top_12_worst.data %>%
ggplot(aes(DATE, pos_test_rate_roll_mean_7))+
geom_line(data = select(top_12_worst.data, -NAME), aes(group = NAME_2),
colour = "grey", alpha = 0.4)+
geom_line(aes(colour = NAME))+
facet_wrap(~NAME)+
scale_y_continuous("Positive Test % (moving average)", labels = percent)
top_12_worst.data %>%
ggplot(aes(DATE, pos_test_rate_roll_mean_7))+
geom_line(data = select(top_12_worst.data, -NAME), aes(group = NAME_2),
colour = "grey", alpha = 0.4)+
geom_line(aes(colour = NAME))+
facet_wrap(~NAME)+
scale_y_continuous("Positive Test % (moving average)", labels = percent)+
theme(legend.position = "none")
top_12_worst.data %>%
ggplot(aes(DATE, pos_test_rate_roll_mean_7))+
geom_line(data = select(top_12_worst.data, -NAME), aes(group = NAME_2),
colour = "grey", alpha = 0.4)+
geom_line(aes(colour = NAME), size = 1.2)+
facet_wrap(~NAME)+
scale_y_continuous("Positive Test % (moving average)", labels = percent)+
theme(legend.position = "none")
?theme
top_12_worst.data %>%
ggplot(aes(DATE, pos_test_rate_roll_mean_7))+
geom_line(data = select(top_12_worst.data, -NAME), aes(group = NAME_2),
colour = "grey", alpha = 0.4)+
geom_line(aes(colour = NAME), size = 1.2)+
facet_wrap(~NAME)+
scale_y_continuous("Positive Test % (moving average)", labels = percent)+
theme(legend.position = "none", strip.background = element_rect(fill = "white"))
top_12_worst.data %>%
ggplot(aes(DATE, pos_test_rate_roll_mean_7))+
geom_line(data = select(top_12_worst.data, -NAME), aes(group = NAME_2),
colour = "grey", alpha = 0.4)+
geom_line(aes(colour = NAME), size = 1.2)+
facet_wrap(~NAME)+
scale_y_continuous("Positive Test % (moving average)", labels = percent)+
theme(legend.position = "none", strip.background = element_rect(fill = "white"),
strip.text = element_text(size = 3))
top_12_worst.data %>%
ggplot(aes(DATE, pos_test_rate_roll_mean_7))+
geom_line(data = select(top_12_worst.data, -NAME), aes(group = NAME_2),
colour = "grey", alpha = 0.4)+
geom_line(aes(colour = NAME), size = 1.2)+
facet_wrap(~NAME)+
scale_y_continuous("Positive Test % (moving average)", labels = percent)+
theme(legend.position = "none", strip.background = element_rect(fill = "white"),
strip.text = element_text(size = 10))
top_12_worst.data %>%
ggplot(aes(DATE, pos_test_rate_roll_mean_7))+
geom_line(data = select(top_12_worst.data, -NAME), aes(group = NAME_2),
colour = "grey", alpha = 0.4)+
geom_line(aes(colour = NAME), size = 1.2)+
facet_wrap(~NAME)+
scale_y_continuous("Positive Test % (moving average)", labels = percent)+
theme(legend.position = "none", strip.background = element_rect(fill = "white"),
strip.text = element_text(size = 20))
top_12_worst.data %>%
ggplot(aes(DATE, pos_test_rate_roll_mean_7))+
geom_line(data = select(top_12_worst.data, -NAME), aes(group = NAME_2),
colour = "grey", alpha = 0.4)+
geom_line(aes(colour = NAME), size = 1.2)+
facet_wrap(~NAME)+
scale_y_continuous("Positive Test % (moving average)", labels = percent)+
theme(legend.position = "none", strip.background = element_rect(fill = "white"),
strip.text = element_text(size = 20)
text = element_text(size = 13))
top_12_worst.data %>%
ggplot(aes(DATE, pos_test_rate_roll_mean_7))+
geom_line(data = select(top_12_worst.data, -NAME), aes(group = NAME_2),
colour = "grey", alpha = 0.4)+
geom_line(aes(colour = NAME), size = 1.2)+
facet_wrap(~NAME)+
scale_y_continuous("Positive Test % (moving average)", labels = percent)+
theme(legend.position = "none", strip.background = element_rect(fill = "white"),
strip.text = element_text(size = 20),
text = element_text(size = 13))
top_12_worst.data %>%
ggplot(aes(DATE, pos_test_rate_roll_mean_7))+
geom_line(data = select(top_12_worst.data, -NAME), aes(group = NAME_2),
colour = "grey", alpha = 0.4)+
geom_line(aes(colour = NAME), size = 1.2)+
facet_wrap(~NAME)+
scale_y_continuous("Positive Test % (moving average)", labels = percent)+
theme(legend.position = "none", strip.background = element_rect(fill = "white"),
strip.text = element_text(size = 20),
text = element_text(size = 15))
county_data %>%
filter(NAME == "La Crosse") %>%
select(DATE, POS_0_9:POS_90)
county_data %>%
filter(NAME == "La Crosse") %>%
select(DATE, POS_0_9:POS_90) %>% View()
county_data %>%
filter(NAME == "Dane") %>%
select(DATE, POS_0_9:POS_90) %>% View()
county_data %>%
filter(NAME == "Dane") %>% View()
county_data %>%
filter(NAME == "Milwaukee") %>% View()
county_data %>%
filter(NAME %in% c("Dane", "Milwaukee")) %>%
ggplot(aes(DATE, pos_test_rate, colour = NAME))+
geom_line()
county_data %>%
filter(NAME %in% c("Dane", "Milwaukee")) %>%
ggplot(aes(DATE, colour = NAME))+
geom_line(aes(y = pos_test_rate))
county_data %>%
filter(NAME %in% c("Dane", "Milwaukee")) %>%
ggplot(aes(DATE, colour = NAME))+
geom_line(aes(y = pos_test_rate))+
geom_line(aes(y = pos_test_rate_roll_mean_7), linetype = "dashed")
county_data %>%
filter(NAME %in% c("Dane", "Milwaukee")) %>%
ggplot(aes(DATE, colour = NAME))+
geom_line(aes(y = pos_test_rate), linetype = "dashed")+
geom_line(aes(y = pos_test_rate_roll_mean_7))
county_data %>%
filter(DATE > "2020-03-31") %>%
filter(NAME %in% c("Dane", "Milwaukee")) %>%
ggplot(aes(DATE, colour = NAME))+
geom_line(aes(y = pos_test_rate))+
geom_line(aes(y = pos_test_rate_roll_mean_7), linetype = "dashed")
county_data %>%
filter(DATE > "2020-03-31") %>%
filter(NAME %in% c("Dane", "Milwaukee")) %>%
ggplot(aes(DATE, colour = NAME))+
geom_line(aes(y = pos_test_rate), linetype = "dashed")+
geom_line(aes(y = pos_test_rate_roll_mean_7),size = 1.2)
full_data %>%
filter(GEO == "State")
full_data %>%
filter(GEO == "State") %>% View()
full_data %>%
filter(GEO == "State") %>%
select(DATE, POS_0_9:POS_90)
full_data %>%
filter(GEO == "State") %>%
select(DATE, POS_0_9:POS_90) %>%
mutate_if(is.numeric, ~list(change = .x - lag(.x)))
full_data %>%
filter(GEO == "State") %>%
select(DATE, POS_0_9:POS_90) %>%
mutate_if(is.numeric,diff)
lag_from_prev <- function(x) x - lag(x)
full_data %>%
filter(GEO == "State") %>%
select(DATE, POS_0_9:POS_90) %>%
mutate_if(is.numeric, lag_from_prev)
full_data %>%
filter(GEO == "State") %>%
select(DATE, POS_0_9:POS_90) %>%
mutate_if(is.numeric, lag_from_prev) %>% View()
full_data %>%
filter(GEO == "State") %>%
select(DATE, POS, POS_0_9:POS_90) %>%
mutate_if(is.numeric, lag_from_prev) %>% View()
full_data %>%
filter(GEO == "State") %>%
select(DATE, POSITIVE, POS_0_9:POS_90) %>%
mutate_if(is.numeric, lag_from_prev) %>% View()
full_data %>%
filter(GEO == "State") %>%
select(DATE, POSITIVE, POS_0_9:POS_90) %>%
mutate_if(is.numeric, lag_from_prev) -> D
d
full_data %>%
filter(GEO == "State") %>%
select(DATE, POSITIVE, POS_0_9:POS_90) %>%
mutate_if(is.numeric, lag_from_prev) -> d
d
tail(d)
rowSums(tail(d)[,-c(1:2)])
d$POSITIVE
d
d
d %>%
mutate_if(starts_with("POS_"), ./POSITIVE)
d %>%
mutate_if(vars(starts_with("POS_")), ./POSITIVE)
?starts_with
d %>%
mutate_at(vars(starts_with("POS_")), ./POSITIVE)
d %>%
mutate_at(starts_with("POS_"), ./POSITIVE)
d %>%
mutate_at(vars(starts_with("POS_")), ~./POSITIVE)
d %>%
mutate_at(vars(starts_with("POS_")), ~./POSITIVE) %>% View()
d %>%
mutate_at(vars(starts_with("POS_")), ~./POSITIVE) %>%
FILTER(!is.na(POS_0_9))
d %>%
mutate_at(vars(starts_with("POS_")), ~./POSITIVE) %>%
filter(!is.na(POS_0_9))
d %>%
mutate_at(vars(starts_with("POS_")), ~./POSITIVE) %>%
filter(!is.na(POS_0_9)) %>%
filter(DATE > "2020-04-03")
d %>%
mutate_at(vars(starts_with("POS_")), ~./POSITIVE) %>%
filter(!is.na(POS_0_9)) %>%
filter(DATE > "2020-04-03") %>%
pivot_longer(cols = starts_with("POS_"))
d %>%
mutate_at(vars(starts_with("POS_")), ~./POSITIVE) %>%
filter(!is.na(POS_0_9)) %>%
filter(DATE > "2020-04-03") %>%
pivot_longer(cols = starts_with("POS_")) %>%
ggplot(aes(name, DATE, fill = value))+geom_tile()
d %>%
mutate_at(vars(starts_with("POS_")), ~./POSITIVE) %>%
filter(!is.na(POS_0_9)) %>%
filter(DATE > "2020-04-03") %>%
pivot_longer(cols = starts_with("POS_")) %>%
ggplot(aes(name, DATE, fill = value))+geom_tile()+
coord_flip()
d %>%
mutate_at(vars(starts_with("POS_")), ~./POSITIVE) %>%
filter(!is.na(POS_0_9)) %>%
filter(DATE > "2020-04-03") %>%
pivot_longer(cols = starts_with("POS_")) %>%
ggplot(aes(DATE, value))+
geom_line(aes(colour = name))
names(full_data)
full_data %>%
filter(GEO == "State") %>%
ggplot(aes(DATE, POS_BLK / POS))+geom_line()
full_data %>%
filter(GEO == "State") %>%
ggplot(aes(DATE, POS_BLK / POSITIVE))+geom_line()
full_data %>%
filter(GEO == "State") %>%
ggplot(aes(DATE, POS_WHT / POSITIVE))+geom_line()
full_data %>%
filter(GEO == "State") %>%
ggplot(aes(DATE, POS_FEM / POSITIVE))+geom_line()
setwd("~/")
library(spotifyr)
library(tidyverse)
Sys.setenv(SPOTIFY_CLIENT_ID = 'e4fbfe7a222a454ba0c6394504367078')
Sys.setenv(SPOTIFY_CLIENT_SECRET = '4b6422b52f3643f9902de99626c19262')
access_token <- get_spotify_access_token()
p <- get_my_playlists(limit = 30)
brads_jazz <- p %>%
filter(name == "Brad's Jazz")
brads_jazz.tracks1 <- get_playlist_tracks(brads_jazz$id)
brads_jazz.tracks1_af <- get_track_audio_features(brads_jazz.tracks1$track.id)
brads_jazz.tracks2 <- get_playlist_tracks(brads_jazz$id,
offset = 99)
brads_jazz.tracks2_af <- get_track_audio_features(brads_jazz.tracks2$track.id)
brads_jazz.tracks3 <- get_playlist_tracks(brads_jazz$id,
offset = 199)
brads_jazz.tracks3_af <- get_track_audio_features(brads_jazz.tracks3$track.id)
rm_tracks <- c("62JYNwb0IkMsbVCIDzQcaJ",
"60EkFnRSHQ8nnofL3Wns5X",
"0A21IjvzVtcY5iCLW2wGkt")
brads_jazz.tracks <- bind_rows(brads_jazz.tracks1,
brads_jazz.tracks2,
brads_jazz.tracks3) %>%
unique() %>%
filter(!track.id %in% rm_tracks)
brads_jazz.tracks_af <- bind_rows(brads_jazz.tracks1_af,
brads_jazz.tracks2_af,
brads_jazz.tracks3_af) %>%
unique() %>%
filter(!id %in% rm_tracks)
setwd("~/")
saveRDS(object = brads_jazz.tracks,
"files_for_blog/clustering-brads-jazz/BradsJazzTracks.RDS")
saveRDS(object = brads_jazz.tracks_af,
"files_for_blog/clustering-brads-jazz/BradsJazzTracksAudioFeatures.RDS")
setwd("~/files_for_blog/clustering-brads-jazz")
library(tidyverse)
library(NbClust)
library(dbscan)
theme_set(theme_bw())
playlist <- readRDS("BradsJazzTracks.RDS")
playlist_features <- readRDS("BradsJazzTracksAudioFeatures.RDS")
playlist_features %>%
select_if(is.numeric) %>%
gather(variable, value) %>%
ggplot(aes(value, fill = variable))+
geom_histogram()+
facet_wrap(~variable,scales = 'free')+
theme(legend.position = "none")
vars_to_keep <- c("acousticness", "danceability",
"duration_ms", "energy",
"instrumentalness",
"liveness", "loudness",
"speechiness", "tempo",
"valence")
vars_to_log1p <- c("duration_ms",
"liveness",
"speechiness",
"valence")
playlist_features.numeric <- playlist_features %>%
select(all_of(vars_to_keep))
playlist_features.scale <- playlist_features.numeric %>%
mutate_at(vars_to_log1p, log1p) %>%
mutate_all(scale)
playlist_features.scale %>%
gather(variable, value) %>%
ggplot(aes(value, fill = variable))+
geom_histogram()+
facet_wrap(~variable,scales = 'free')
nbc <- NbClust(playlist_features.scale,
method = "kmeans",
max.nc = 10)
nbc_pc5 <- NbClust(predict(prcomp(playlist_features.scale))[,1:5],
method = "kmeans",
max.nc = 10)
km_2 <- kmeans(playlist_features.scale,centers = 2,iter.max = 100,nstart = 25)
km_6 <- kmeans(playlist_features.scale,centers = 6,iter.max = 100,nstart = 25)
km_data <- lapply(2:6,
FUN = function(k){
km <-  kmeans(playlist_features.scale,
centers = k,
iter.max = 100,
nstart = 25)
cluster_count <- as.data.frame(table(km$cluster)) %>%
mutate(clusters = as.numeric(Var1)) %>%
select(-Var1)
km$centers %>%
as_tibble() %>%
mutate(cluster = k,
clusters = 1:k) %>%
gather(variable, value, -cluster, -clusters) %>%
inner_join(cluster_count)}) %>%
bind_rows()
km_data %>%
mutate(clusters = paste0(clusters, " (n=", Freq, ")")) %>%
ggplot(aes(clusters, variable, fill = value))+
geom_tile()+
scale_fill_gradient2(limits = c(-2.5, 2.5),
oob = scales::squish)+
facet_wrap(~cluster, scales = 'free_x')
playlist_features %>%
arrange(instrumentalness) %>%
select(id, speechiness, instrumentalness) %>%
inner_join(playlist %>% select(id = track.id, track.name, track.artists)) %>%
top_n(20, -instrumentalness)
playlist_features
playlist_features.numeric
playlist_features.scale
prcomp(playlist_features.scale)
plot(predict(prcomp(playlist_features.scale))[,1:2])
km_data %>%
mutate(clusters = paste0(clusters, " (n=", Freq, ")")) %>%
ggplot(aes(clusters, variable, fill = value))+
geom_tile()+
scale_fill_gradient2(limits = c(-2.5, 2.5),
oob = scales::squish)+
facet_wrap(~cluster, scales = 'free_x')
playlist_features %>%
arrange(instrumentalness) %>%
select(id, speechiness, instrumentalness) %>%
inner_join(playlist %>% select(id = track.id, track.name, track.artists)) %>%
top_n(20, -instrumentalness)
playlist_features %>%
arrange(instrumentalness) %>%
select(id, speechiness, instrumentalness) %>%
inner_join(playlist %>% select(id = track.id, track.name, track.artists)) %>%
top_n(20, speechiness)
playlist$track.name
playlist
playlist_features.scale
cor(playlist_features.scale)
library(corrplot)
?corrplot
corrplot(cor(playlist_features.scale))
corrplot(cor(playlist_features.scale))
with(playlist_features.scale, plot(energy, loudness))
playlist_features %>%
arrange(instrumentalness) %>%
select(id, energy, loudness) %>%
inner_join(playlist %>% select(id = track.id, track.name, track.artists)) %>%
top_n(20, energy)
playlist_features %>%
arrange(instrumentalness) %>%
select(id, energy, loudness) %>%
inner_join(playlist %>% select(id = track.id, track.name, track.artists)) %>%
top_n(20, -energy)
