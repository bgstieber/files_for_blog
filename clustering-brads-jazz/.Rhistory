size = 2, colour = "#c5050c")+
xlab("Decade")+
scale_y_continuous("Adjusted Home Field Advantage",
limits = c(1,5))+
ggtitle("Adjusted Home Field Advantage by Decade",
subtitle = "Error bars are approximate 95% confidence intervals")
hfa_by_decade %>%
ggplot(aes(factor(decade), estimate))+
geom_hline(aes(yintercept = coef(score_diff_model)[1]),
linetype = 'dashed')+
geom_pointrange(aes(ymin = estimate - 2 * std.error,
ymax = estimate + 2 * std.error),
size = 1.2, colour = "#c5050c")+
xlab("Decade")+
scale_y_continuous("Adjusted Home Field Advantage",
limits = c(1,5))+
ggtitle("Adjusted Home Field Advantage by Decade",
subtitle = "Error bars are approximate 95% confidence intervals")
hfa_by_decade %>%
ggplot(aes(factor(decade), estimate))+
geom_hline(aes(yintercept = coef(score_diff_model)[1]),
linetype = 'dashed')+
geom_pointrange(aes(ymin = estimate - 2 * std.error,
ymax = estimate + 2 * std.error),
size = 1.2, colour = "#c5050c")+
xlab("Decade")+
scale_y_continuous("Adjusted Home Field Advantage",
limits = c(1,5))+
ggtitle("Adjusted Home Field Advantage by Decade",
subtitle = "Error bars are approximate 95% confidence intervals")+
theme(axis.text = element_text(size = 12))
dat <- read.csv("data/iris.txt")
tail(dat)
Sys.setenv(SPOTIFY_CLIENT_ID = 'e4fbfe7a222a454ba0c6394504367078')
Sys.setenv(SPOTIFY_CLIENT_SECRET = '415d2c4651ac40659fbe469f9ce91601')
library(spotifyr)
library(tidyverse)
library(scales)
library(caret)
library(ggrepel)
library(RANN)
theme_set(theme_bw())
# connect
access_token <- get_spotify_access_token()
# get my playlists
my_playlists <- get_user_playlists('12102534356')
library(spotifyr)
beatles <- get_artist_audio_features('the beatles')
beatles
?get_playlist
?get_user_playlists
pp <- get_user_playlists(user_id = "12102534356")
?get_spotify_authorization_code
Sys.getenv("SPOTIFY_CLIENT_ID")
get_spotify_access_token()
get_spotify_authorization_code()
install.packages("spotifyr")
library(spotifyr)
Sys.getenv("SPOTIFY_CLIENT_ID")
get_spotify_authorization_code()
library(tidyverse)
library(spotifyr)
library(tidyverse)
update.packages()
iinstall.packages("spotifyr")
install.packages("spotifyr")
library(spotifyr)
# connect
access_token <- get_spotify_access_token()
# get my playlists
my_playlists <- get_user_playlists('12102534356')
spotifyr::scopes
?get_my_playlists
get_my_playlists()
?get_spotify_authorization_code
Sys.getenv("SPOTIFY_CLIENT_SECRET")
Sys.setenv(SPOTIFY_CLIENT_SECRET = '4b6422b52f3643f9902de99626c19262')
library(spotifyr)
# connect
access_token <- get_spotify_access_token()
Sys.setenv(SPOTIFY_CLIENT_ID = 'e4fbfe7a222a454ba0c6394504367078')
Sys.setenv(SPOTIFY_CLIENT_SECRET = '4b6422b52f3643f9902de99626c19262')
access_token <- get_spotify_access_token()
access_token
?scopes
scopes
spotifyr::get_spotify_authorization_code()
?get_spotify_authorization_code
get_spotify_authorization_code(scope = spotifyr::scopes[!grepl("birthdate", spotifyr::scopes)])
p <- get_my_playlists()
?get_my_playlists
devtools::install_github('charlie86/spotifyr')
library(spotifyr)
scopes
p <- get_my_playlists()
p
# connect
access_token <- get_spotify_access_token()
?get_spotify_access_token
Sys.setenv(SPOTIFY_CLIENT_ID = 'e4fbfe7a222a454ba0c6394504367078')
Sys.setenv(SPOTIFY_CLIENT_SECRET = '4b6422b52f3643f9902de99626c19262')
access_token <- get_spotify_authorization_code()
p <- get_my_playlists()
p
p$name
p <- get_my_playlists(limit = 30)
p
p$name
p$name == "Brad's Jazz"
brads_jazz <- p %>%
filter(name == "Brad's Jazz") %>%
get_playlist_tracks()
library(tidyverse)
brads_jazz <- p %>%
filter(name == "Brad's Jazz") %>%
get_playlist_tracks()
brads_jazz <- p %>%
filter(name == "Brad's Jazz")
?get_playlist_audio_features
brads_jazz$uri
?get_playlist_tracks
brads_jazz <- get_playlist_tracks(brads_jazz$id)
brads_jazz
brads_jazz %>% head
brads_jazz1 <- get_playlist_tracks(brads_jazz$id)
library(spotifyr)
library(tidyverse)
access_token <- get_spotify_access_token()
p <- get_my_playlists(limit = 30)
?get_spotify_access_token
Sys.getenv("SPOTIFY_CLIENT_ID")
Sys.getenv("SPOTIFY_CLIENT_SECRET")
get_spotify_access_token
access_token <- get_spotify_access_token()
Sys.setenv(SPOTIFY_CLIENT_ID = 'e4fbfe7a222a454ba0c6394504367078')
Sys.setenv(SPOTIFY_CLIENT_SECRET = '4b6422b52f3643f9902de99626c19262')
access_token <- get_spotify_access_token()
p <- get_my_playlists(limit = 30)
p
brads_jazz <- p %>%
filter(name == "Brad's Jazz")
?get_playlist_tracks
brads_jazz.tracks1 <- get_playlist_tracks(brads_jazz$id)
brads_jazz.tracks2 <- get_playlist_tracks(brads_jazz$id,
offset = 99)
brads_jazz.tracks3 <- get_playlist_tracks(brads_jazz$id,
offset = 199)
brads_jazz.tracks3
brads_jazz.tracks <- bind_rows(brads_jazz.tracks1,
brads_jazz.tracks2,
brads_jazz.tracks3)
dim(brads_jazz.tracks)
dim(distinct(brads_jazz.tracks))
dim(unique(brads_jazz.tracks))
brads_jazz.tracks <- bind_rows(brads_jazz.tracks1,
brads_jazz.tracks2,
brads_jazz.tracks3) %>%
unique()
?get_track_audio_features
?get_playlist_audio_features
p$owner.display_name
brads_jazz$uri
?get_user_audio_features
?get_track_audio_features
t1 <- get_track_audio_features(brads_jazz.tracks1)
brads_jazz.tracks1$track.id
brads_jazz.tracks1$track.id[1:5]
get_track_audio_features(brads_jazz.tracks1$track.id[1:5])
t1 <- get_track_audio_features(brads_jazz.tracks1$track.id[1:50])
t1
t1 <- get_track_audio_features(brads_jazz.tracks1$track.id)
t1
brads_jazz.tracks1_af <- get_track_audio_features(brads_jazz.tracks1$track.id)
brads_jazz.tracks2_af <- get_track_audio_features(brads_jazz.tracks2$track.id)
brads_jazz.tracks3_af <- get_track_audio_features(brads_jazz.tracks3$track.id)
brads_jazz.tracks
brads_jazz.tracks %>% names
brads_jazz.tracks_h <- head(brads_jazz.tracks, 10)
brads_jazz.tracks_h$track.name
brads_jazz.tracks_h$track.artists
bind_rows(brads_jazz.tracks1,
brads_jazz.tracks2,
brads_jazz.tracks3) -> d
table(table(d$track.id))
brads_jazz.tracks <- bind_rows(brads_jazz.tracks1,
brads_jazz.tracks2,
brads_jazz.tracks3) %>%
group_by(track.id) %>%
top_n(1)
brads_jazz.tracks <- bind_rows(brads_jazz.tracks1,
brads_jazz.tracks2,
brads_jazz.tracks3) %>%
group_by(track.id) %>%
top_n(1) %>%
ungroup()
brads_jazz.tracks
brads_jazz.tracks <- bind_rows(brads_jazz.tracks1,
brads_jazz.tracks2,
brads_jazz.tracks3) %>%
group_by(track.id) %>%
top_n(1, added_ad) %>%
ungroup()
brads_jazz.tracks <- bind_rows(brads_jazz.tracks1,
brads_jazz.tracks2,
brads_jazz.tracks3) %>%
group_by(track.id) %>%
top_n(1, added_at) %>%
ungroup()
brads_jazz.tracks
brads_jazz.tracks <- bind_rows(brads_jazz.tracks1,
brads_jazz.tracks2,
brads_jazz.tracks3)
brads_jazz.tracks %>%
group_by(track.id) %>%
mutate(count = n()) %>%
filter(count == 2) %>% View()
brads_jazz.tracks_af <- bind_rows(brads_jazz.tracks1_af,
brads_jazz.tracks2_af,
brads_jazz.tracks3_af) %>%
unique()
dim(brads_jazz.tracks_af)
summary(brads_jazz.tracks_af)
columns <- rep(0, ncol(brads_jazz.tracks_af))
for(i in 1:ncol(brads_jazz.tracks_af)){
columns[i] <- as.numeric(is.numeric(brads_jazz.tracks_af[,i]))
}
columns <- rep(FALSE, ncol(brads_jazz.tracks_af))
for(i in 1:ncol(brads_jazz.tracks_af)){
columns[i] <- is.numeric(brads_jazz.tracks_af[,i])
}
lapply(names(brads_jazz.tracks_af)[colums],
FUN = function(n) hist(brads_jazz.tracks_af[n],
main = paste("histogram of", n)))
lapply(names(brads_jazz.tracks_af)[columns],
FUN = function(n) hist(brads_jazz.tracks_af[n],
main = paste("histogram of", n)))
lapply(names(brads_jazz.tracks_af)[columns],
FUN = function(n) plot(hist(brads_jazz.tracks_af[n],
main = paste("histogram of", n))))
names(brads_jazz.tracks_af)[columns]
columns
brads_jazz.tracks_af[,1]
is.numeric(brads_jazz.tracks_af[,1])
is.numeric(brads_jazz.tracks_af[,1,drop=T])
columns <- rep(FALSE, ncol(brads_jazz.tracks_af))
for(i in 1:ncol(brads_jazz.tracks_af)){
columns[i] <- is.numeric(brads_jazz.tracks_af[,i,drop=T])
}
lapply(names(brads_jazz.tracks_af)[columns],
FUN = function(n) hist(brads_jazz.tracks_af[n],
main = paste("histogram of", n)))
columns
brads_jazz.tracks_af[names(brads_jazz.tracks_af)[1]]
brads_jazz.tracks_af[names(brads_jazz.tracks_af)[1],drop=T]
brads_jazz.tracks_af[[names(brads_jazz.tracks_af)[1]]]
lapply(names(brads_jazz.tracks_af)[columns],
FUN = function(n) hist(brads_jazz.tracks_af[[n]],
main = paste("histogram of", n)))
hist(log(brads_jazz.tracks_af$duration_ms))
hist(log(brads_jazz.tracks_af$liveness))
hist(log(brads_jazz.tracks_af$tempo))
hist(log(brads_jazz.tracks_af$danceability))
hist(log(brads_jazz.tracks_af$energy))
hist(log(brads_jazz.tracks_af$loudness))
hist(log1p(brads_jazz.tracks_af$loudness))
hist(log(brads_jazz.tracks_af$acousticness))
hist(log1p(brads_jazz.tracks_af$acousticness))
hist(log1p(brads_jazz.tracks_af$liveness))
hist(log1p(brads_jazz.tracks_af$valence))
vars_to_keep <- c("id", "danceability", "energy",
"loudness", "acousticness",
"instrumentalness",
"liveness",
"valence", "tempo", "duration_ms")
vars_to_log1p <- c("danceability",
'duration_ms', "valence", 'tempo')
af <- brads_jazz.tracks_af %>%
select(vars_to_keep) %>%
mutate_at(vars_to_log1p, log1p)
af
pairs(af[,-1])
pairs(af[,-1], panel = scatter.smooth(span = 0.5))
pairs(af[,-1], panel = scatter.smooth)
?pairs
pairs(af[,-1], upper.panel = panel.smooth, lower.panel = scatter.smooth)
pairs(af[,-1], panel = panel.smooth)
af_scaled <- as_tibble(scale(af[,-1]))
af_scaled
pairs(af_scaled, panel = panel.smooth)
brads_jazz.tracks <- bind_rows(brads_jazz.tracks1,
brads_jazz.tracks2,
brads_jazz.tracks3) %>%
unique()
brads_jazz.tracks_af <- bind_rows(brads_jazz.tracks1_af,
brads_jazz.tracks2_af,
brads_jazz.tracks3_af) %>%
unique()
?save
?saveRDS
saveRDS(brads_jazz.tracks, "files_for_blog/clustering-brads-jazz/BradsJazzTracks.RDS")
saveRDS(brads_jazz.tracks_af, "files_for_blog/clustering-brads-jazz/BradsJazzTracksAudioFeatures.RDS")
setwd("~/files_for_blog/clustering-brads-jazz")
library(tidyverse)
library(NbClust)
library(dbscan)
theme_set(theme_bw())
playlist <- readRDS("BradsJazzTracks.RDS")
playlist_features <- readRDS("BradsJazzTracksAudioFeatures.RDS")
playlist_features %>%
select_if(is.numeric) %>%
gather(variable, value) %>%
ggplot(aes(value, fill = variable))+
geom_histogram()+
facet_wrap(~variable,scales = 'free')
vars_to_keep <- c("acousticness", "danceability",
"duration_ms", "energy",
"instrumentalness",
"liveness", "loudness",
"speechiness", "tempo",
"valence")
vars_to_log1p <- c("duration_ms",
"liveness",
"speechiness",
"valence")
playlist_features.numeric <- playlist_features %>%
select(all_of(vars_to_keep))
playlist_features.scale <- playlist_features.numeric %>%
mutate_at(vars_to_log1p, log1p) %>%
mutate_all(scale)
playlist_features.scale %>%
gather(variable, value) %>%
ggplot(aes(value, fill = variable))+
geom_histogram()+
facet_wrap(~variable,scales = 'free')
nbc <- NbClust(playlist_features.scale,
method = "kmeans",
max.nc = 10)
nbc_pc5 <- NbClust(predict(prcomp(playlist_features.scale))[,1:5],
method = "kmeans",
max.nc = 10)
km_2 <- kmeans(playlist_features.scale,centers = 2,iter.max = 100,nstart = 25)
km_6 <- kmeans(playlist_features.scale,centers = 6,iter.max = 100,nstart = 25)
km_data <- lapply(2:6,
FUN = function(k){
km <-  kmeans(playlist_features.scale,
centers = k,
iter.max = 100,
nstart = 25)
cluster_count <- as.data.frame(table(km$cluster)) %>%
mutate(clusters = as.numeric(Var1)) %>%
select(-Var1)
km$centers %>%
as_tibble() %>%
mutate(cluster = k,
clusters = 1:k) %>%
gather(variable, value, -cluster, -clusters) %>%
inner_join(cluster_count)}) %>%
bind_rows()
km_data %>%
mutate(clusters = paste0(clusters, " (n=", Freq, ")")) %>%
ggplot(aes(clusters, variable, fill = value))+
geom_tile()+
scale_fill_gradient2()+
facet_wrap(~cluster, scales = 'free_x')
km_data %>%
mutate(clusters = paste0(clusters, " (n=", Freq, ")")) %>%
ggplot(aes(clusters, variable, fill = value))+
geom_tile()+
scale_fill_gradient2(limits = c(-2.5, 2.5))+
facet_wrap(~cluster, scales = 'free_x')
km_data %>%
mutate(clusters = paste0(clusters, " (n=", Freq, ")")) %>%
ggplot(aes(clusters, variable, fill = value))+
geom_tile()+
scale_fill_gradient2(breaks = c(-2.5, 2.5))+
facet_wrap(~cluster, scales = 'free_x')
km_data %>%
mutate(clusters = paste0(clusters, " (n=", Freq, ")")) %>%
ggplot(aes(clusters, variable, fill = value))+
geom_tile()+
scale_fill_gradient2(limits = c(-2.5, 2.5), oob = scales::squish())+
facet_wrap(~cluster, scales = 'free_x')
km_data %>%
mutate(clusters = paste0(clusters, " (n=", Freq, ")")) %>%
ggplot(aes(clusters, variable, fill = value))+
geom_tile()+
scale_fill_gradient2(limits = c(-2.5, 2.5), oob = scales::squish)+
facet_wrap(~cluster, scales = 'free_x')
playlist_features
playlist_features %>%
top_n(10, speechiness)
playlist_features %>%
top_n(10, speechiness) %>%
arrange(desc(speechiness)) %>%
select(id, speechiness)
playlist_features %>%
top_n(10, speechiness) %>%
arrange(desc(speechiness)) %>%
select(id, speechiness) %>%
inner_join(playlist, by = c("id" = "track.id"))
playlist_features %>%
top_n(10, speechiness) %>%
arrange(desc(speechiness)) %>%
select(id, speechiness) %>%
inner_join(playlist %>% select(id = track.id, track.name, track.artists))
playlist_features %>%
arrange(desc(speechiness)) %>%
select(id, speechiness) %>%
inner_join(playlist %>% select(id = track.id, track.name, track.artists)) %>%
filter(track.name == "Do It the Hard Way")
playlist_features %>%
arrange(desc(speechiness)) %>%
select(id, speechiness, instrumentalness) %>%
inner_join(playlist %>% select(id = track.id, track.name, track.artists)) %>%
filter(track.name == "Do It the Hard Way")
plot(playlist_features.scale$speechiness,
playlist_features.scale$instrumentalness)
hist(playlist_features$speechiness)
km_data %>%
mutate(clusters = paste0(clusters, " (n=", Freq, ")")) %>%
ggplot(aes(clusters, variable, fill = value))+
geom_tile()+
scale_fill_gradient2()+
facet_wrap(~cluster, scales = 'free_x')
km_data %>%
mutate(clusters = paste0(clusters, " (n=", Freq, ")")) %>%
ggplot(aes(clusters, variable, fill = value))+
geom_tile()+
scale_fill_gradient2(limits = c(-2.5, 2.5),
oob = scales::squish)+
facet_wrap(~cluster, scales = 'free_x')
playlist_features %>%
arrange(desc(speechiness)) %>%
select(id, speechiness, instrumentalness) %>%
inner_join(playlist %>% select(id = track.id, track.name, track.artists)) %>%
top_n(20, -instrumentalness)
playlist_features %>%
arrange(instrumentalness) %>%
select(id, speechiness, instrumentalness) %>%
inner_join(playlist %>% select(id = track.id, track.name, track.artists)) %>%
top_n(20, -instrumentalness)
playlist_features %>%
arrange(instrumentalness) %>%
select(id, speechiness, instrumentalness) %>%
inner_join(playlist %>% select(id = track.id, track.name, track.artists)) %>%
top_n(20, -instrumentalness) -> d
d
d$track.artists
d %>%
mutate(track.artists = paste0(track.artists$track.artists, collapse = ","))
d %>%
mutate(track.artists = map(track.artists$name, paste))
d
d %>%
unnest(track.artists)
d
d1 <- d[1,]
d1
d1 %>%
mutate(track.artists = unlist(track.artists$track.name))
d1 %>%
mutate(track.artists = unlist(track.artists$track.artists))
d1 %>%
unnest(track.artists$track.artists)
d1 %>%
unnest(track.artists)
d1$track.artists
d1$track.artists$name
d[7,]
d[7,]$track.artists
d
d1
d1 %>%
mutate(artists = map(track.artists, .[[1]]$name))
d1 %>%
mutate(artists = map(track.artists, ~.x[[1]]$name))
d1 %>%
mutate(artists = map(track.artists, ~.x[[1]]))
d1 %>%
mutate(artists = unnest(map(track.artists, ~.x[[1]])))
d1 %>%
mutate(artists = map(track.artists, ~unlist(.x[[1]])))
d1
d1$track.artists
d1$track.artists[[1]]
d1$track.artists[[1]]$name
d1 %>%
mutate(artists = track.artists[[1]]$name)
d1 %>%
mutate(artists = paste0(track.artists[[1]]$name, collapse = ",")
d1 %>%
mutate(artists = paste0(track.artists[[1]]$name, collapse = ","))
d %>%
mutate(artists = paste0(track.artists[[1]]$name, collapse = ","))
d %>%
rowwise() %>%
mutate(artists = paste0(track.artists[[1]]$name, collapse = ","))
d
d
?tidy
tidy(d$track.artists)
d
d %>%
rowwise() %>%
mutate(artists = map(track.artists, ~.x))
d %>%
rowwise() %>%
mutate(artists = map(track.artists, ~.x$name))
lapply(d$track.artists)
lapply(d$track.artists, FUN = function(l) l$name)
sapply(d$track.artists, FUN = function(l) l$name)
sapply(d$track.artists, FUN = function(l) paste0(l$name, collapse = ","))
