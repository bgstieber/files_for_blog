knitr::opts_chunk$set(message = FALSE, warning = FALSE,
error = FALSE)
library(tidyverse)
library(tidycensus)
library(ggmap)
library(scales)
library(maps)
theme_set(theme_bw())
github_raw <- "https://raw.githubusercontent.com/"
repo <- "tonmcg/County_Level_Election_Results_12-16/master/"
data_file <- "2016_US_County_Level_Presidential_Results.csv"
results_16 <- read_csv(paste0(github_raw, repo, data_file)) %>%
filter(! state_abbr %in% c('AK', 'HI')) %>%
select(-X1) %>%
mutate(total_votes = votes_dem + votes_gop,
trump_ratio_clinton =
(votes_gop/total_votes) / (votes_dem/total_votes),
two_party_ratio = (votes_dem) / (votes_dem + votes_gop)) %>%
mutate(log_trump_ratio = log(trump_ratio_clinton))
census_data <- get_acs('county',
c(pop_25 = 'B15003_001',
edu = 'B16010_028',
inc = 'B21004_001')) %>%
select(-moe) %>%
spread(variable, estimate)
repo <- "bgstieber/files_for_blog/master/election-map/"
data_file <- "Data/pop_density_by_county.csv"
pop_density <- read_csv(paste0(github_raw, repo, data_file), skip = 1) %>%
mutate(population = as.numeric(Population)) %>%
select(geography = `Geographic area`,
FIPS = `Target Geo Id2`,
population,
'population_density' = `Density per square mile of land area - Population`)
special_fips <- c(12091L, 22099L, 37053L, 48167L, 51001L,
53053L, 53055L)
county_map_with_fips <- county.fips %>%
separate(polyname, c('region', 'subregion'), ',') %>%
mutate(subregion = ifelse(fips %in% special_fips,
stringi::stri_split_fixed(subregion,
":",
n=1,
tokens_only = TRUE) %>%
unlist,
subregion)) %>%
unique() %>%
inner_join(map_data('county'))
election_results <- county_map_with_fips %>%
inner_join(select(results_16, combined_fips, state_abbr,
county_name, log_trump_ratio, two_party_ratio),
by = c('fips' = 'combined_fips'))
election_results %>%
ggplot(aes(x = long, y = lat, group = group,
fill = two_party_ratio))+
geom_polygon(colour = rgb(0.9,0.9,0.9, .1))+
geom_polygon(data = map_data('state'), fill = NA, colour = 'white')+
scale_fill_gradientn(values = rescale(c(0, .3, .5, .7, 1)),
colors = brewer_pal(palette = 'RdBu')(5),
name = 'Trump to Clinton Votes Ratio',
breaks = c(1/5, 1/3, 1/2, 2/3, 4/5),
labels = c('4:1', '2:1', '1:1', '1:2', '1:4'))+
theme_minimal()+
theme(axis.text = element_blank(),
panel.grid = element_blank(),
legend.position = 'top')+
coord_map()+
xlab('')+ylab('')+
guides(fill = guide_colorbar(barwidth = 10,
barheight = 1,
direction = 'horizontal'))+
ggtitle('2016 Presidential Election County Level Results')
county_map_with_fips %>%
inner_join(pop_density, by = c('fips' = 'FIPS')) %>%
ggplot(aes(long, lat, group = group, fill = population_density))+
geom_polygon(colour = rgb(0.9,0.9,0.9, .1))+
geom_polygon(data = map_data('state'), fill = NA, colour = 'white')+
scale_fill_viridis_c(trans = log_trans(2),option = 'magma',
name = 'Population Density per Square Mile')+
theme_minimal()+
theme(axis.text = element_blank(),
panel.grid = element_blank(),
legend.position = 'top')+
coord_map()+
xlab('')+ylab('')+
guides(fill = guide_colorbar(barwidth = 10,
barheight = 1,
direction = 'horizontal'))+
ggtitle('Count Level Population Density')
results_and_pop_density <- results_16 %>%
inner_join(pop_density, by = c('combined_fips' = 'FIPS')) %>%
mutate(two_party_ratio = (votes_dem) / (votes_dem + votes_gop))
results_and_pop_density %>%
ggplot(aes(population_density, two_party_ratio))+
geom_point(aes(size = population),
shape = 21, colour = 'dodgerblue3')+
scale_x_continuous(trans = log_trans(2),
name = 'Population Density per Square Mile')+
scale_size_continuous(trans = sqrt_trans(), labels = comma,
name = 'Population')+
ylab('Two Party Vote Ratio (> 0.5 favors Clinton)')+
ggtitle('Population Density versus Two Party Vote Ratio',
subtitle = 'Each dot is a county in the contiguous United States')
model1 <- lm(two_party_ratio ~ I(log(population_density)),
data = results_and_pop_density)
# extract residuals
# negative values underestimate Trump (prediction is too high)
# positive values underestimate Clinton (prediction is too low)
results_and_pop_density$resid_model1 <- resid(model1)
#make residual heatmap
results_and_pop_density_map <- county_map_with_fips %>%
inner_join(results_and_pop_density,
by = c('fips' = 'combined_fips'))
results_and_pop_density_map %>%
ggplot(aes(long, lat, group = group, fill = resid_model1))+
geom_polygon(colour = rgb(0.9,0.9,0.9, .1))+
geom_polygon(data = map_data('state'), fill = NA, colour = 'white')+
scale_fill_gradientn(values = rescale(c(-1, -.4, -.15, 0, .15, .4, 1)),
colours = brewer_pal(palette = 'PiYG')(7),
limits = c(-1, 1),
name = 'Prediction Error (pink underestimates Trump, green underestimates Clinton)')+
theme_minimal()+
theme(axis.text = element_blank(),
panel.grid = element_blank(),
legend.position = 'top')+
coord_map()+
xlab('')+ylab('')+
guides(fill = guide_colorbar(barwidth = 10,
barheight = 1,
direction = 'horizontal'))+
ggtitle('2016 Election Prediction Errors by County')
github_raw <- "https://raw.githubusercontent.com/tonmcg/"
repo <- "US_County_Level_Election_Results_08-16/master/"
data_file <- "US_County_Level_Presidential_Results_12-16.csv"
results_12 <- read_csv(paste0(github_raw, repo, data_file)) %>%
filter(! state_abbr %in% c('AK', 'HI')) %>%
select(-X1) %>%
select(combined_fips, votes_dem_2012, votes_gop_2012) %>%
mutate(two_party_2012 = votes_dem_2012 / (votes_dem_2012 + votes_gop_2012))
results_pop_census <- results_and_pop_density %>%
inner_join(mutate(census_data, fips = as.numeric(GEOID)),
by = c('combined_fips' = 'fips')) %>%
mutate(edu_pct = edu / pop_25) %>%
inner_join(results_12, by = 'combined_fips')
# fit logistic regression
model2 <- glm(cbind(votes_dem, votes_gop) ~ I(log(population_density))+
I(log(inc))+edu_pct + state_abbr + I(log1p(two_party_2012)),
data = results_pop_census,
family = 'binomial')
# extract residuals
results_pop_census$resid_model2 <- resid(model2, type = 'response')
summary(model2)
summary(results_pop_census)
# fit logistic regression
model2 <- glm(cbind(votes_dem, votes_gop) ~ I(log(population_density))+
I(log(inc))+edu_pct + state_abbr + I(log1p(two_party_2012)),
data = results_pop_census,
family = 'binomial',
na.action = na.omit)
# extract residuals
results_pop_census$resid_model2 <- resid(model2, type = 'response')
# fit logistic regression
model2 <- glm(cbind(votes_dem, votes_gop) ~ I(log(population_density))+
I(log(inc))+edu_pct + state_abbr + I(log1p(two_party_2012)),
data = results_pop_census,
family = 'binomial',
na.action = na.exclude)
# extract residuals
results_pop_census$resid_model2 <- resid(model2, type = 'response')
# fit logistic regression
model2 <- glm(cbind(votes_dem, votes_gop) ~ I(log(population_density))+
I(log(inc))+edu_pct + state_abbr + I(log1p(two_party_2012)),
data = results_pop_census,
family = 'binomial',
na.action = na.exclude)
# extract residuals
results_pop_census$resid_model2 <- resid(model2, type = 'response')
# join up to geographic data
results_pop_census_map <- county_map_with_fips %>%
inner_join(results_pop_census, by = c('fips' = 'combined_fips'))
results_pop_census_map %>%
ggplot(aes(long, lat, group = group, fill = resid_model2))+
geom_polygon(colour = rgb(0.9,0.9,0.9, .1))+
geom_polygon(data = map_data('state'), fill = NA, colour = 'white')+
scale_fill_gradientn(values = rescale(c(-.16, -.05, -.02, 0, .02, .05, .16)),
colours = brewer_pal(palette = 'PiYG')(7),
limits = c(-.16, .16),
name = 'Prediction Error (pink underestimates Trump, green underestimates Clinton)')+
theme_minimal()+
theme(axis.text = element_blank(),
panel.grid = element_blank(),
legend.position = 'top')+
coord_map()+
xlab('')+ylab('')+
guides(fill = guide_colorbar(barwidth = 10,
barheight = 1,
direction = 'horizontal'))+
ggtitle('2016 Election Prediction Errors by County - New Model')
knitr::opts_chunk$set(message = FALSE, warning = FALSE,
error = FALSE)
library(tidyverse)
library(tidycensus)
library(ggmap)
library(scales)
library(maps)
theme_set(theme_bw())
github_raw <- "https://raw.githubusercontent.com/"
repo <- "tonmcg/County_Level_Election_Results_12-16/master/"
data_file <- "2016_US_County_Level_Presidential_Results.csv"
results_16 <- read_csv(paste0(github_raw, repo, data_file)) %>%
filter(! state_abbr %in% c('AK', 'HI')) %>%
select(-X1) %>%
mutate(total_votes = votes_dem + votes_gop,
trump_ratio_clinton =
(votes_gop/total_votes) / (votes_dem/total_votes),
two_party_ratio = (votes_dem) / (votes_dem + votes_gop)) %>%
mutate(log_trump_ratio = log(trump_ratio_clinton))
census_data <- get_acs('county',
c(pop_25 = 'B15003_001',
edu = 'B16010_028',
inc = 'B21004_001')) %>%
select(-moe) %>%
spread(variable, estimate)
repo <- "bgstieber/files_for_blog/master/election-map/"
data_file <- "Data/pop_density_by_county.csv"
pop_density <- read_csv(paste0(github_raw, repo, data_file), skip = 1) %>%
mutate(population = as.numeric(Population)) %>%
select(geography = `Geographic area`,
FIPS = `Target Geo Id2`,
population,
'population_density' = `Density per square mile of land area - Population`)
special_fips <- c(12091L, 22099L, 37053L, 48167L, 51001L,
53053L, 53055L)
county_map_with_fips <- county.fips %>%
separate(polyname, c('region', 'subregion'), ',') %>%
mutate(subregion = ifelse(fips %in% special_fips,
stringi::stri_split_fixed(subregion,
":",
n=1,
tokens_only = TRUE) %>%
unlist,
subregion)) %>%
unique() %>%
inner_join(map_data('county'))
election_results <- county_map_with_fips %>%
inner_join(select(results_16, combined_fips, state_abbr,
county_name, log_trump_ratio, two_party_ratio),
by = c('fips' = 'combined_fips'))
election_results %>%
ggplot(aes(x = long, y = lat, group = group,
fill = two_party_ratio))+
geom_polygon(colour = rgb(0.9,0.9,0.9, .1))+
geom_polygon(data = map_data('state'), fill = NA, colour = 'white')+
scale_fill_gradientn(values = rescale(c(0, .3, .5, .7, 1)),
colors = brewer_pal(palette = 'RdBu')(5),
name = 'Trump to Clinton Votes Ratio',
breaks = c(1/5, 1/3, 1/2, 2/3, 4/5),
labels = c('4:1', '2:1', '1:1', '1:2', '1:4'))+
theme_minimal()+
theme(axis.text = element_blank(),
panel.grid = element_blank(),
legend.position = 'top')+
coord_map()+
xlab('')+ylab('')+
guides(fill = guide_colorbar(barwidth = 10,
barheight = 1,
direction = 'horizontal'))+
ggtitle('2016 Presidential Election County Level Results')
county_map_with_fips %>%
inner_join(pop_density, by = c('fips' = 'FIPS')) %>%
ggplot(aes(long, lat, group = group, fill = population_density))+
geom_polygon(colour = rgb(0.9,0.9,0.9, .1))+
geom_polygon(data = map_data('state'), fill = NA, colour = 'white')+
scale_fill_viridis_c(trans = log_trans(2),option = 'magma',
name = 'Population Density per Square Mile')+
theme_minimal()+
theme(axis.text = element_blank(),
panel.grid = element_blank(),
legend.position = 'top')+
coord_map()+
xlab('')+ylab('')+
guides(fill = guide_colorbar(barwidth = 10,
barheight = 1,
direction = 'horizontal'))+
ggtitle('Count Level Population Density')
results_and_pop_density <- results_16 %>%
inner_join(pop_density, by = c('combined_fips' = 'FIPS')) %>%
mutate(two_party_ratio = (votes_dem) / (votes_dem + votes_gop))
results_and_pop_density %>%
ggplot(aes(population_density, two_party_ratio))+
geom_point(aes(size = population),
shape = 21, colour = 'dodgerblue3')+
scale_x_continuous(trans = log_trans(2),
name = 'Population Density per Square Mile')+
scale_size_continuous(trans = sqrt_trans(), labels = comma,
name = 'Population')+
ylab('Two Party Vote Ratio (> 0.5 favors Clinton)')+
ggtitle('Population Density versus Two Party Vote Ratio',
subtitle = 'Each dot is a county in the contiguous United States')
model1 <- lm(two_party_ratio ~ I(log(population_density)),
data = results_and_pop_density)
# extract residuals
# negative values underestimate Trump (prediction is too high)
# positive values underestimate Clinton (prediction is too low)
results_and_pop_density$resid_model1 <- resid(model1)
#make residual heatmap
results_and_pop_density_map <- county_map_with_fips %>%
inner_join(results_and_pop_density,
by = c('fips' = 'combined_fips'))
results_and_pop_density_map %>%
ggplot(aes(long, lat, group = group, fill = resid_model1))+
geom_polygon(colour = rgb(0.9,0.9,0.9, .1))+
geom_polygon(data = map_data('state'), fill = NA, colour = 'white')+
scale_fill_gradientn(values = rescale(c(-1, -.4, -.15, 0, .15, .4, 1)),
colours = brewer_pal(palette = 'PiYG')(7),
limits = c(-1, 1),
name = 'Prediction Error (pink underestimates Trump, green underestimates Clinton)')+
theme_minimal()+
theme(axis.text = element_blank(),
panel.grid = element_blank(),
legend.position = 'top')+
coord_map()+
xlab('')+ylab('')+
guides(fill = guide_colorbar(barwidth = 10,
barheight = 1,
direction = 'horizontal'))+
ggtitle('2016 Election Prediction Errors by County')
github_raw <- "https://raw.githubusercontent.com/tonmcg/"
repo <- "US_County_Level_Election_Results_08-16/master/"
data_file <- "US_County_Level_Presidential_Results_12-16.csv"
results_12 <- read_csv(paste0(github_raw, repo, data_file)) %>%
filter(! state_abbr %in% c('AK', 'HI')) %>%
select(-X1) %>%
select(combined_fips, votes_dem_2012, votes_gop_2012) %>%
mutate(two_party_2012 = votes_dem_2012 / (votes_dem_2012 + votes_gop_2012))
results_pop_census <- results_and_pop_density %>%
inner_join(mutate(census_data, fips = as.numeric(GEOID)),
by = c('combined_fips' = 'fips')) %>%
mutate(edu_pct = edu / pop_25) %>%
inner_join(results_12, by = 'combined_fips')
# fit logistic regression
model2 <- glm(cbind(votes_dem, votes_gop) ~ I(log(population_density))+
I(log(inc))+edu_pct + state_abbr + I(log1p(two_party_2012)),
data = results_pop_census,
family = 'binomial',
na.action = na.exclude)
# extract residuals
results_pop_census$resid_model2 <- resid(model2, type = 'response')
# join up to geographic data
results_pop_census_map <- county_map_with_fips %>%
inner_join(results_pop_census, by = c('fips' = 'combined_fips'))
results_pop_census_map %>%
ggplot(aes(long, lat, group = group, fill = resid_model2))+
geom_polygon(colour = rgb(0.9,0.9,0.9, .1))+
geom_polygon(data = map_data('state'), fill = NA, colour = 'white')+
scale_fill_gradientn(values = rescale(c(-.16, -.05, -.02, 0, .02, .05, .16)),
colours = brewer_pal(palette = 'PiYG')(7),
limits = c(-.16, .16),
name = 'Prediction Error (pink underestimates Trump, green underestimates Clinton)')+
theme_minimal()+
theme(axis.text = element_blank(),
panel.grid = element_blank(),
legend.position = 'top')+
coord_map()+
xlab('')+ylab('')+
guides(fill = guide_colorbar(barwidth = 10,
barheight = 1,
direction = 'horizontal'))+
ggtitle('2016 Election Prediction Errors by County - New Model')
top_n(results_pop_census, 10, resid_model2) %>%
bind_rows(top_n(results_pop_census, 10, -resid_model2)) %>%
ggplot(aes(reorder(paste0(county_name, ', ', state_abbr), resid_model2), resid_model2))+
geom_col(aes(fill = resid_model2), colour = 'black')+
coord_flip()+
scale_fill_gradientn(values = rescale(c(-.16, -.05, -.02, 0, .02, .05, .16)),
colours = brewer_pal(palette = 'PiYG')(7),
limits = c(-.16, .16),
name = 'Prediction Error (pink underestimates Trump, green underestimates Clinton)')+
theme(legend.position = 'none')+
xlab('')+
ylab('Prediction Error (pink underestimated Trump, green underestimated Clinton)')+
ggtitle('Counties with the Highest Prediction Errors',
subtitle = 'Top 10 over- and under-predictions selected')
state_data <- data_frame(state_abbr = state.abb,
region = tolower(state.name))
states_map <- map_data('state') %>%
left_join(state_data) %>%
mutate(state_abbr = ifelse(region == 'district of columbia',
'DC', state_abbr))
state_median <- results_pop_census %>%
group_by(state_abbr) %>%
summarise(median_residual = median(resid_model2, na.rm = TRUE))
state_median %>%
inner_join(states_map) %>%
ggplot(aes(x = long, y = lat, group = group, fill = median_residual))+
geom_polygon(colour = rgb(0.9,0.9,0.9, .4))+
scale_fill_gradientn(values = rescale(c(-.031, -.005, 0, .005, .031)),
colours = brewer_pal(palette = 'PiYG')(5),
limits = c(-.031, .031),
breaks = c(-.02, 0, .02),
name = 'Prediction Error (pink underestimates Trump, green underestimates Clinton)')+
theme_minimal()+
theme(axis.text = element_blank(),
panel.grid = element_blank(),
legend.position = 'top')+
coord_map()+
xlab('')+ylab('')+
guides(fill = guide_colorbar(barwidth = 10,
barheight = 1,
direction = 'horizontal'))+
ggtitle('Median Prediction Error by State')
state_median
state_median %>% View())
state_median %>% View()
range(state_median$median_residual)
state_median %>%
inner_join(states_map) %>%
ggplot(aes(x = long, y = lat, group = group, fill = median_residual))+
geom_polygon(colour = rgb(0.9,0.9,0.9, .4))+
scale_fill_gradientn(values = rescale(c(-.032, -.005, 0, .005, .032)),
colours = brewer_pal(palette = 'PiYG')(5),
limits = c(-.032, .032),
breaks = c(-.02, 0, .02),
name = 'Prediction Error (pink underestimates Trump, green underestimates Clinton)')+
theme_minimal()+
theme(axis.text = element_blank(),
panel.grid = element_blank(),
legend.position = 'top')+
coord_map()+
xlab('')+ylab('')+
guides(fill = guide_colorbar(barwidth = 10,
barheight = 1,
direction = 'horizontal'))+
ggtitle('Median Prediction Error by State')
top_n(results_pop_census, 10, resid_model2) %>%
bind_rows(top_n(results_pop_census, 10, -resid_model2))
top_n(results_pop_census, 10, resid_model2) %>%
bind_rows(top_n(results_pop_census, 10, -resid_model2))  -> dd
range(dd$resid_model2)
top_n(results_pop_census, 10, resid_model2) %>%
bind_rows(top_n(results_pop_census, 10, -resid_model2)) %>%
ggplot(aes(reorder(paste0(county_name, ', ', state_abbr), resid_model2), resid_model2))+
geom_col(aes(fill = resid_model2), colour = 'black')+
coord_flip()+
scale_fill_gradientn(values = rescale(c(-.18, -.05, -.02, 0, .02, .05, .18)),
colours = brewer_pal(palette = 'PiYG')(7),
limits = c(-.18, .18),
name = 'Prediction Error (pink underestimates Trump, green underestimates Clinton)')+
theme(legend.position = 'none')+
xlab('')+
ylab('Prediction Error (pink underestimated Trump, green underestimated Clinton)')+
ggtitle('Counties with the Highest Prediction Errors',
subtitle = 'Top 10 over- and under-predictions selected')
